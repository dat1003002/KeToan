<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPIGAADyBgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABNMzMKSS82rkkuOfhMMjvHTjdDFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAASTA4dkYrM/hEKTH/SC03/0kuOP9KLzn8TTI8mQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARy41SEcsNepEKTH/RCkx/0QpMf9ILTf/SS44/0kuOP9JLjj/SzA670swPFUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEswOTpEKTH/RCkx/0QpMf9EKTH/RCkx/0guN/9JLjj/SS44/0kuOP9JLjj/SS44/0oy
        PEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA39/fCOXc3Kns5OLWiXR7bkQpMf9EKTH/RCkx/0QpMf9EKTH/SC43/0kuOP9JLjj/SS44/0ku
        OP9JLjj/SzA8VQAAAADp4+Mu////CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAObf33Hg19f33dPT/+zi4v/CsrT/RCkx/0QpMf9EKTH/RCkx/0QpMf9ILjf/SS44/0ku
        OP9JLjj/SS44/0kuOP9iRk1j5NzctuPb2/3t4+L57eXlfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOjf3zfi2trd3dPT/93T0//d09P/7OPi/8KztP9EKTH/RCkx/0QpMf9EKTH/SC02/081
        QP9NMTv/SS44/0kuOP9JLjj/SS44/6ucoP3d09P/49nZ/+zh4P/s4eD/7+Xi6Ovn50EAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADl3t6K3dPT/93T0//d09P/3dPT/93T0//s4+L/wrS1/0QpMf9EKTH/RCsz/080
        P/9RN0L/UTdC/1E3Qv9QNkH/Sy86/0kuOP9JLjj/q5uf/93T0//j2dn/7OHg/+zh4P/s4eD/7OLh/+7k
        49Ds4+MbAAAAAAAAAAAAAAAAAAAAAOXc27jd09P/3dPT/93T0//d09P/3dPT/+zj4v/DtLb/RCkx/0wy
        O/9RNkL/UTdC/05zjv9PtuP/Vn+a/1E3Qv9RN0L/TzU//0swOP+qm57/3dPT/+Pa2f/s4eD/7OHg/+zh
        4P/s4eD/7OHg/+zk5LMAAAAAAAAAAAAAAAAAAAAA5dzct93T0//d09P/3dPT/93T0//d09P/7OPi/9XI
        yf9WPUf/UTdC/09UZ/9Br+H/L7n3/0zJ/P9Py/z/VMLu/1Ridv9RN0L/VDtF/7+ws//d09P/49ra/+zh
        4P/s4eD/7OHg/+zh4P/s4eD/7uTktAAAAAAAAAAAAAAAAAAAAADk3d223dPT/93T0//d09P/3dPT/+Lb
        2f/v6ej/7OHg/9za3P9Vq9T/Mrr3/y+59/8vuff/TMn8/0/L/P9Py/z/T8v8/1y44P/Fxsv/3dPT/93T
        0//j2tr/7OHg/+zh4P/s4eD/7OHg/+zh4P/u5ua1AAAAAAAAAAAAAAAAAAAAAOTd3bbd09P/3dPT/93V
        1f/t5+f/8u7t//Lu7f/W6O//N734/y+59/8vuff/L7n3/y+59/9MyPz/T8v8/0/L/P9Py/z/T8v8/1PM
        /P/D09z/5N7c//Hs6//y6+v/7OPi/+zh4P/s4eD/7OHg/+7m5rUAAAAAAAAAAAAAAAAAAAAA5N3dtd3T
        0//p5OL/8u7t//Lu7f+zp+//gnTx/8Df8f8vuff/L7n3/y+59/8vuff/L7n3/03J/P9Py/z/T8v8/0/L
        /P9Py/z/T8v8/77g7v/y7u3/8u7t//Lu7f/y7u3/7+ro/+zh4P/s4eD/7ubmtgAAAAAAAAAAAAAAAAAA
        AADo5OSe8uzs//Lu7f/Y0u3/YErv/zsZ6P8+JvD/RFX0/y+59/8vuff/L7n3/y+59/8vuff/Tcn8/0/L
        /P9Py/z/T8v8/0/L/P9Py/z/v+Ty/6CS7/9HLu//WUjy/9LL7//y7u3/8u7t/+7m5v/u5ua3AAAAAAAA
        AAAAAAAAAAAAAAAAAADk2ux8eGTv/T0b6f87GOj/Oxjo/z8m8f9ATvL/L7n3/y+59/8vuff/L7n3/zO7
        9/9d0f3/U8v8/0/L/P9Py/z/T8v8/0/L/P9UbfP/Oxjo/z0f7f89Je//PSbw/21e8//o5O3/8u7u+u3q
        6mEAAAAAAAAAAAAAAAAAAAAAQSfyYjwe6/o7GOj/Oxjo/zsY6P87GOj/Pibx/0BO8v8vuff/L7n3/y+5
        9/9NyPv/adj//2rY//9q2P//YdP+/0/N/P9Py/z/T8v8/0ZY7/87GOj/PSDs/z0l7/89Je//PSXv/0Ar
        8P5KNfWVAAAAAAAAAAAAAAAAAAAAAAAAAABAJPC4Oxjo/zsY6P87GOj/Oxjo/zsY6P8+JvH/QU/y/y+5
        9/9ExPr/Z9b//2rY//9q2P//atj//2rY//9q2P//adf//1vQ/v9Py/z/Rljv/zsY6P89IOz/PSXv/z0l
        7/89Je//PSXv/z0l7/9ALfajAAAAAAAAAAAAAAAAAAAAAD4k8Lg7GOj/Oxjo/zsY6P87GOj/Oxjo/z4m
        8f9ARPH/YdL+/2rY//9q2P//atj//2rY//9q2P//atj//2rY//9q2P//atj//2fW//9ET+//Oxjo/z0g
        7P89Je//PSXv/z0l7/89Je//PSXv/0Et9bQAAAAAAAAAAAAAAAAAAAAAPyTwtjsY6P87GOj/Oxjo/zsY
        6P87Gur/QCv0/z0l7/9HUPP/ZML9/2rY//9q2P//atj//2rY//9q2P//atj//2rY//9ny/3/S1bv/zsY
        6P87GOj/PiHs/z0l7/89Je//PSXv/z0l7/89Je//QS31tQAAAAAAAAAAAAAAAAAAAAA/JPC2Oxjo/zsY
        6P87GOj/QCnz/0c8/v9HPf//Rjr9/z8p8f89Je//UHb2/2jT//9q2P//atj//2rY//9p2P//Vob2/zsY
        6P87GOj/Oxjo/z0c6v9FNfr/QjP4/z0l7/89Je//PSXv/z0l7/9BLfW1AAAAAAAAAAAAAAAAAAAAAD8l
        8LU7GOj/PyLv/0U6/f9HPf//Rz3//0c9//9HPf//Rz3//0Q2+v89J+//QC7x/1TM/P9p2P//YdP+/1HL
        /P89IOv/Oxjo/zsY6P9CLfb/Rzz//0c9//9HPf//Rzz+/0Au9f89Je//PSXv/0At9bYAAAAAAAAAAAAA
        AAAAAAAAQSjysUU2+v9HPf//Rz3//0c9//9HPf//Rz3//0c9//9HPf//Rz3//0c8//9BN/j/L7n3/y+5
        9/9Gxfr/T8v8/z0g6/9AJvH/Rjz+/0c9//9HPf//Rz3//0c9//9HPf//Rz3//0U6/f8/KfH/QC31twAA
        AAAAAAAAAAAAAAAAAABJPf8VSD3/wEc9//9HPf//Rz3//0c9//9HPf//Rz3//0c9//9HPf//RkL//zmI
        +v8vuff/L7n3/0bF+v9Py/z/Rkv7/0c9//9HPf//Rz3//0c9//9HPf//Rz3//0c9//9HPf//Rz3//0c8
        //5FNfmGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARjz/N0Y9/91HPf//Rz3//0c9//9HPf//Rz7//T1u
        /P8vt/f/L7n3/y+59/8xuvf/UMr7/1DL/P9Py/z/SoL+/0c///9HPf//Rz3//0c9//9HPf//Rz3//0c9
        //9HPf/rRT7/RgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEU+/3NGPf/3Rj3//0g+
        /8dHrP1oL7n3/y+59/8vuff/QcL5/2PU/v9q2P//Z9b//1nQ/f9Py/z/T8H8/0ll/v9HPf//Rz3//0c9
        //9HPf/5Rz3/fgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBA
        /whEPv8tAAAAAEnH+Vcvuff/O7/5/1zQ/f9q2P//atj//2rY//9q2P//atj//2XV/v9Vzv3/T8v8/1CD
        /21GPf/dRz7/qUBA/wgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAT8n7R1PM/P5p1///atj//2rY//9q2P//atj//2rY//9q2P//atj//2rX
        //9f0/7+XNP/OgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAadr/S2rY/+xq2P//atj//2rY//9q2P//atj//2rY
        //9q2P//atf/7m3X/1IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGnW/4Nr2P/7atj//2rY
        //9q2P//atj/+mjX/44AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHHj
        /xJp2f+2atn//WnX/8Bg3/8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAA//8CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//7////4P///8A///8AH//+AA//8AAJ/+AAAP+AAAA/AAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAAD4AAAA8AAAAfAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAAD8AAAB/wA
        AB/+QAA//8AB///gA///+A////wf////f/8=
</value>
  </data>
</root>